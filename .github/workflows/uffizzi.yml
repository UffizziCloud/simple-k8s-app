name: Create UffizziCluster on PullRequest

permissions:
  id-token: write
  contents: read

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    branches: [ main ]

env:
  # These are all temporary for this proof-of-concept.
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: uffizzi-client-clone-1    # Add your cluster name here.
  GKE_ZONE: us-central1   # Add your cluster zone here.
  #USE_GKE_GCLOUD_AUTH_PLUGIN: true
  # Once finished, this workflow will include Uffizzi credentials instead of GCP.

  # In practice, clusters will probably get a unique ID and the workflow will identify them using metadata.
  UCLUSTER_NAME: cluster-${{ github.run_id }}
  UCLUSTER_LABELS: |
    github.com/pull_request.number: ${{ github.event.number }}
    app.uffizzi.com/project-id: "3255"
    app.uffizzi.com/project-name: "Example Project"
    app.uffizzi.com/user-id: "3465"
    app.uffizzi.com/user-email: "user+uffizzi@example.com"

jobs:
  create-uffizzi-cluster:
    name: Create Uffizzi Cluster
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
        project_id: ${{ env.PROJECT_ID }}

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

#    - name: Run a test for gcloud components
#      run: |
#        gcloud components list
#        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
#        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
#        sudo apt update
#        sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
#        echo "##vso[task.setvariable variable=USE_GKE_GCLOUD_AUTH_PLUGIN]True"
#        gcloud components list

    - run: |-
        gcloud container clusters get-credentials ${GKE_CLUSTER} --zone us-central1 --project uffizzi-pro-qa-gke

    - name: create
      if: ${{ endsWith(github.event.action, "opened") }} # "opened" or "reopened"
      run: |-
        envsubst < uffizzi-cluster.template.yaml > uffizzi-cluster.rendered.yaml
        cat uffizzi-cluster.rendered.yaml #debug
        kubectl apply -f uffizzi-cluster.rendered.yaml
        # TODO: fetch and decode kubeconfig
        # TODO: deploy sample app

    - name: connect
      if: ${{ github.event.action = 'synchronize' }}
      run: |-
        echo TODO
        # TODO: fetch and decode kubeconfig
        # TODO: re-deploy sample app

    - name: destroy
      if: ${{ github.event.action = 'closed' }}
      run: |-
        kubectl delete namespace ${UCLUSTER_NAME}

    # Deploy the Docker image to the GKE cluster
#    - name: UffizziCluster + Helm
#      run: |-
#        ## Set Namespace
#        export PR_NUMBER=${{github.event.number}}
#        export NAMESPACE=pr-simple-k8s-app-$PR_NUMBER
#        export HELM_MANIFEST=$(helm template $PR_NUMBER ./chart -n $NAMESPACE)
#        yq e '.spec.manifests = strenv(HELM_MANIFEST) |
#          .metadata.namespace = strenv(NAMESPACE)' uffizzi-cluster.yml > uffizzi-cluster-configured.yml
#        kubectl create namespace $NAMESPACE
#        kubectl apply -f uffizzi-cluster-configured.yml
